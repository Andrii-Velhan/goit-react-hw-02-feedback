{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","Section","TagName","as","title","classList","style","section","join","defaultProps","FeedbackOptions","options","onLeaveFeedback","buttonType","Object","keys","map","option","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","styles","statList","Notification","message","App","state","props","initialValue","handleFeedback","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","percentage","Math","round","this","positiveFeedback","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.819552f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__18D7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__CmwgS\",\"title\":\"Statistics_title__3p9it\",\"statList\":\"Statistics_statList__1jwhO\",\"item\":\"Statistics_item__2VKDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__28tgO\"};","import React from 'react';\nimport './Container.module.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport style from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ className, as: TagName, title, children }) => {\n  const classList = [style.section, className].join(' ');\n  return (\n    <TagName className={classList}>\n      <h2>{title}</h2>\n      {children}\n    </TagName>\n  );\n};\n\nSection.defaultProps = {\n  as: 'div',\n  className: '',\n};\n\nSection.propTypes = {\n  as: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  // const [] = options;\n  // const { good, neutral, bad } = options;\n  const buttonType = Object.keys(options);\n  return (\n    <div className=\"Counter__controls\">\n      {buttonType.map(option => (\n        <button\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n// import setBg from '../../bd/ColorGenerator';\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  // const { good, neutral, bad, total, positivePercentage } = stats;\n  // const type = Object.keys(stats);\n  return (\n    <>\n      <ul className={styles.statList}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}</li>\n      </ul>\n      {/* {title && <h2 className={styles.title}>{title}</h2>} */}\n\n      {/* <ul className={styles.statList}>\n        {type.map(stat => (\n          <li\n            key={stat.id}\n            style={{\n              backgroundColor: setBg(),\n            }}\n            className={styles.item}\n          >\n            <span className={styles.label}>{stat}</span>\n            <span className={styles.percentage}> {stat}</span>\n          </li>\n        ))}\n      </ul> */}\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string,\n};\n\nStatistics.defaultProps = {\n  total: 0,\n};\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <div>{message}</div>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Container from '../src/components/Container/Container';\nimport Section from '../src/components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from '../src/components/Statistics/Statistics';\nimport Notification from '../src/components/Notification/Notification';\nimport './App.css';\nexport default class App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {};\n\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  handleFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (100 * this.state.good) / this.countTotalFeedback(),\n    );\n    return percentage > 0 ? percentage + '%' : 0;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Container className=\"\">\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={this.state}\n              onLeaveFeedback={this.handleFeedback}\n            />\n          </Section>\n          <Section title=\"Statistics\">\n            {total > 0 ? (\n              // <ul>\n              //   <li>Good: {this.state.good}</li>\n              //   <li>Neutral: {this.state.neutral}</li>\n              //   <li>Bad: {this.state.bad}</li>\n              //   <li>Total: {total}</li>\n              //   <li>Positive feedback: {positiveFeedback}</li>\n              // </ul>\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={total}\n                positivePercentage={positiveFeedback}\n              />\n            ) : (\n              <Notification message=\"No feedback given\" />\n            )}\n          </Section>\n          {/* <Statistics title=\"Statistics+++\" stats={this.state} /> */}\n        </Container>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}